$date
	Tue Jan 30 08:43:25 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_ $end
$var wire 1 ! sda $end
$var wire 1 " scl $end
$var wire 1 # free $end
$var reg 1 $ R_W $end
$var reg 7 % add_reg [6:0] $end
$var reg 1 & clk $end
$var reg 8 ' data_1 [7:0] $end
$var reg 8 ( data_2 [7:0] $end
$var reg 1 ) rst_n $end
$var reg 1 * start $end
$scope module FSM_MASTER_DUT $end
$var wire 1 $ R_W $end
$var wire 7 + add_reg [6:0] $end
$var wire 1 & clk $end
$var wire 8 , data_1 [7:0] $end
$var wire 8 - data_2 [7:0] $end
$var wire 1 ) rst_n $end
$var wire 1 * start $end
$var wire 1 . wait_for_sync $end
$var wire 4 / state_master [3:0] $end
$var wire 1 ! sda $end
$var wire 1 " scl $end
$var wire 1 0 rst_count_2 $end
$var wire 1 1 rst_count $end
$var wire 1 # free $end
$var wire 1 2 data_sent $end
$var wire 1 3 data_received $end
$var wire 1 4 count_inc $end
$var wire 7 5 count_ctrl [6:0] $end
$var wire 4 6 count [3:0] $end
$var wire 1 7 add_sent $end
$scope module COUNTER $end
$var wire 1 & clk $end
$var wire 1 ) rst_n $end
$var wire 1 0 rst_count_2 $end
$var wire 1 4 count_inc $end
$var reg 4 8 count [3:0] $end
$upscope $end
$scope module SCL $end
$var wire 1 7 add_sent $end
$var wire 1 & clk $end
$var wire 4 9 count [3:0] $end
$var wire 1 4 count_inc $end
$var wire 1 3 data_received $end
$var wire 1 2 data_sent $end
$var wire 1 ) rst_n $end
$var wire 1 . wait_for_sync $end
$var wire 4 : state_master [3:0] $end
$var wire 1 1 rst_count $end
$var reg 7 ; count_ctrl [6:0] $end
$var reg 1 " scl $end
$upscope $end
$scope module SDA $end
$var wire 1 $ R_W $end
$var wire 7 < add_reg [6:0] $end
$var wire 1 7 add_sent $end
$var wire 1 & clk $end
$var wire 4 = count [3:0] $end
$var wire 7 > count_ctrl [6:0] $end
$var wire 8 ? data_1 [7:0] $end
$var wire 8 @ data_2 [7:0] $end
$var wire 1 3 data_received $end
$var wire 1 2 data_sent $end
$var wire 1 1 rst_count $end
$var wire 1 0 rst_count_2 $end
$var wire 1 ) rst_n $end
$var wire 1 " scl $end
$var wire 1 ! sda $end
$var wire 1 * start $end
$var wire 4 A state_master [3:0] $end
$var wire 1 . wait_for_sync $end
$var wire 1 # free $end
$var reg 1 B ack_reg $end
$var reg 4 C current_state [3:0] $end
$var reg 4 D next_state [3:0] $end
$var reg 2 E no_of_data_sent [1:0] $end
$var reg 1 F sda_reg $end
$upscope $end
$upscope $end
$scope task RST_TEST $end
$upscope $end
$scope task SEND_ADDR_checker $end
$var reg 7 G addr [6:0] $end
$var reg 1 H count $end
$upscope $end
$scope task START_TEST $end
$var reg 7 I addr [6:0] $end
$var reg 1 J r_w $end
$upscope $end
$scope task START_TEST_checker $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xJ
bx I
xH
bx G
xF
bx E
bx D
bx C
xB
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
x7
bx 6
bx 5
x4
x3
x2
x1
x0
bx /
x.
bx -
bx ,
bx +
x*
x)
bx (
bx '
0&
bx %
x$
x#
x"
x!
$end
#5
1&
#10
0&
#15
11
00
02
07
0.
03
04
b0 D
b0 6
b0 8
b0 9
b0 =
b0 E
0B
1!
1F
1#
b0 /
b0 :
b0 A
b0 C
1"
b0 5
b0 ;
b0 >
b0 (
b0 -
b0 @
b0 '
b0 ,
b0 ?
0$
b0 %
b0 +
b0 <
0*
0)
1&
#20
0&
#25
01
z"
0#
b1 /
b1 :
b1 A
b1 C
z!
zF
b1 D
1&
b1010110 %
b1010110 +
b1010110 <
b10101011 (
b10101011 -
b10101011 @
b10101011 '
b10101011 ,
b10101011 ?
1*
1)
0J
b1010110 I
#30
0&
#35
b1 5
b1 ;
b1 >
1&
#39
0H
b1010110 G
#40
0&
#45
b10 5
b10 ;
b10 >
0!
0F
1&
#50
0&
#55
11
10
b10 D
1.
b11 5
b11 ;
b11 >
1&
#60
0&
#65
01
00
0.
b0 5
b0 ;
b0 >
0"
b10 /
b10 :
b10 A
b10 C
1&
#70
0&
#75
b1 5
b1 ;
b1 >
1&
#80
0&
#85
b10 5
b10 ;
b10 >
1&
#90
0&
#95
1!
1F
b11 5
b11 ;
b11 >
1&
#100
0&
#105
b100 5
b100 ;
b100 >
1&
#110
0&
#115
b101 5
b101 ;
b101 >
1&
#120
0&
#125
1H
b110 5
b110 ;
b110 >
1"
1&
#130
0&
#135
b111 5
b111 ;
b111 >
1&
#140
0&
#145
b1000 5
b1000 ;
b1000 >
1&
#150
0&
#155
14
b1001 5
b1001 ;
b1001 >
1&
#160
0&
#165
04
b0 5
b0 ;
b0 >
0"
b1 6
b1 8
b1 9
b1 =
1&
#170
0&
#175
b1 5
b1 ;
b1 >
1&
#180
0&
#185
b10 5
b10 ;
b10 >
1&
#190
0&
#195
0!
0F
b11 5
b11 ;
b11 >
1&
#200
0&
#205
b100 5
b100 ;
b100 >
1&
#210
0&
#215
b101 5
b101 ;
b101 >
1&
#220
0&
#225
0H
b110 5
b110 ;
b110 >
1"
1&
#230
0&
#235
b111 5
b111 ;
b111 >
1&
#240
0&
#245
b1000 5
b1000 ;
b1000 >
1&
#250
0&
#255
14
b1001 5
b1001 ;
b1001 >
1&
#260
0&
#265
04
b0 5
b0 ;
b0 >
0"
b10 6
b10 8
b10 9
b10 =
1&
#270
0&
#275
b1 5
b1 ;
b1 >
1&
#280
0&
#285
b10 5
b10 ;
b10 >
1&
#290
0&
#295
1!
1F
b11 5
b11 ;
b11 >
1&
#300
0&
#305
b100 5
b100 ;
b100 >
1&
#310
0&
#315
b101 5
b101 ;
b101 >
1&
#320
0&
#325
1H
b110 5
b110 ;
b110 >
1"
1&
#330
0&
#335
b111 5
b111 ;
b111 >
1&
#340
0&
#345
b1000 5
b1000 ;
b1000 >
1&
#350
0&
#355
14
b1001 5
b1001 ;
b1001 >
1&
#360
0&
#365
04
b0 5
b0 ;
b0 >
0"
b11 6
b11 8
b11 9
b11 =
1&
#370
0&
#375
b1 5
b1 ;
b1 >
1&
#380
0&
#385
b10 5
b10 ;
b10 >
1&
#390
0&
#395
0!
0F
b11 5
b11 ;
b11 >
1&
#400
0&
#405
b100 5
b100 ;
b100 >
1&
#410
0&
#415
b101 5
b101 ;
b101 >
1&
#420
0&
#425
0H
b110 5
b110 ;
b110 >
1"
1&
#430
0&
#435
b111 5
b111 ;
b111 >
1&
#440
0&
#445
b1000 5
b1000 ;
b1000 >
1&
#450
0&
#455
14
b1001 5
b1001 ;
b1001 >
1&
#460
0&
#465
04
b0 5
b0 ;
b0 >
0"
b100 6
b100 8
b100 9
b100 =
1&
#470
0&
#475
b1 5
b1 ;
b1 >
1&
#480
0&
#485
b10 5
b10 ;
b10 >
1&
#490
0&
#495
1!
1F
b11 5
b11 ;
b11 >
1&
#500
0&
#505
b100 5
b100 ;
b100 >
1&
#510
0&
#515
b101 5
b101 ;
b101 >
1&
#520
0&
#525
1H
b110 5
b110 ;
b110 >
1"
1&
#530
0&
#535
b111 5
b111 ;
b111 >
1&
#540
0&
#545
b1000 5
b1000 ;
b1000 >
1&
#550
0&
#555
14
b1001 5
b1001 ;
b1001 >
1&
#560
0&
#565
04
b0 5
b0 ;
b0 >
0"
b101 6
b101 8
b101 9
b101 =
1&
#570
0&
#575
b1 5
b1 ;
b1 >
1&
#580
0&
#585
b10 5
b10 ;
b10 >
1&
#590
0&
#595
b11 5
b11 ;
b11 >
1&
#600
0&
#605
b100 5
b100 ;
b100 >
1&
#610
0&
#615
b101 5
b101 ;
b101 >
1&
#620
0&
#625
b110 5
b110 ;
b110 >
1"
1&
